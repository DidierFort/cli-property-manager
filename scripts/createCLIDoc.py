#!/usr/bin/env python3

import subprocess, os

commands = [
    {
        'text': """# Promotional Deployment CLI command help

## General help
Use akamai pd or akamai pd help to get general help about all commands.
""",
        'command': ["devops-prov", "help"]
    },{
        'text': """## Most useful commands in order of assumed importance

## <a name="createNew"></a>Create new PD pipeline.
A pipeline consists of a pipeline name and 2 or more environment names. In order to create a new pipeline you also need to specify
a group Id, product Id and contract Id. These ids can be obtained by using the list-* commands. See below.
""",
        'command': ['devops-prov', 'help', 'new-pipeline']
    },{
        'text': """## <a name="merge"></a>Merge
Merge template json and environment variable values into a PM/PAPI rule tree JSON document, stored in dist folder in the current pipeline folder.
This command also calls validate on the PAPI end point.
""",
        'command': ['devops-prov', 'help', 'merge']
    },{
        'text': """## <a name="save"></a>Save
Store rule tree of provided environment. This will also perform validation.
""",
        'command': ['devops-prov', 'help', 'save']
    },{
        'text': """## <a name="promote"></a>Promote environment
Promote (activate property of) an environment.  
""",
        'command': ['devops-prov', 'help', 'promote']
    },{
        'text': """## <a name="checkPromote"></a>Check promotion status
Checks status of previously initiated promotion. If the underlying property activation is complete,
the environment is considered promoted. 
""",
        'command': ['devops-prov', 'help', 'check-promotion-status']
    },{
        'text': """## <a name="setDefault"></a>Set Default
Sets default pipeline and section name in devopsSettings.json. For all commands involving an existing pipeline one can omit the
-p [pipeline-name] option 
""",
        'command': ['devops-prov', 'help', 'set-default']
    },{
        'text': """## <a name="showStatus"></a>Show status
Lists or shows status of each environment of the provided (or default) pipeline. Output format is a table.
""",
        'command': ['devops-prov', 'help', 'list-status']
    },{
        'text': """## List contracts
List contracts available to client ID. The output is in form of a table.
""",
        'command': ['devops-prov', 'help', 'list-contracts']
    },{
        'text': """## List products
List products available under provided contract ID and client ID. The output is in form of a table.
""",
        'command': ['devops-prov', 'help', 'list-products']
    },{
        'text': """## List groups
List groups client ID has access to. The output is in form of a table.
""",
        'command': ['devops-prov', 'help', 'list-groups']
    },{
        'text': """## List cpcodes.
List cpcodes for provided contract ID and group ID.
""",
        'command': ['devops-prov', 'help', 'list-cpcodes']
    },{
        'text': """## List Edge hostnames
List edge hostnames available under provided contract ID and group ID (this could be a long list).
""",
        'command': ['devops-prov', 'help', 'list-edgehostnames']
    },{
        'text': """## Search
Searches for existing property by name. Does not support wild cards, the name needs to be exact. 
""",
        'command': ['devops-prov', 'help', 'search']
    },{
        'text': """## Set Prefixes
Set or unset id prefixes in responses. Instead of IDs with prefix like act_ACCT-ID or grp_2342 responses will only contain the id,
like ACCT-ID or just 2342. This should not matter to the end user for the most part since the SDK hides most of the 
details with the communication between client and REST end points. 
The value is stored with options of the currently used client id. 
If the users uses multiple client ids, they would have to call set-prefixes for each client id.
*Caution: this will also affect any other REST client implemented by user using the same client id!*
""",
        'command': ['devops-prov', 'help', 'set-prefixes']
    },{
        'text': """## Set Rule Format
Sets the default rule format for creating new properties. This value is stored per client id. 
*Caution: this will also affect any other REST client implemented by user using the same client id!*
""",
        'command': ['devops-prov', 'help', 'set-ruleformat']
    },{
        'text': """## Show rule tree 
Download and print out the rule tree for provided environment under a pipeline (default or provided by -p option).
For the most part this command is useless, since the rule tree is generated by the SDK and stored in the dist folder.
This command might get removed in the future or expanded in some way to make it more useful.
""",
        'command': ['devops-prov', 'help', 'show-ruletree']
    },{
        'text': """## Create Edge hostnames
This normally happens as part of save. Check if any edge hostnames need to be created and proceed to create them.
Not a very useful command.
""",
        'command': ['devops-prov', 'help', 'create-edgehostnames']
    }
]


prjDir = os.path.realpath(os.path.join(os.path.dirname(os.path.realpath(__file__)), '..'))
docsFile = os.path.join(prjDir, "docs", "cli_command_help.md")

with open(docsFile, 'w') as f:
    for cmd in commands:
        f.write("\n")
        f.write(cmd['text'])
        f.write("\n")
        p = subprocess.run(cmd['command'], stdout=subprocess.PIPE, encoding='UTF-8')
        helpText = "\n".join(map(lambda x: "   " + x, p.stdout.split("\n")))
        f.write(helpText)
